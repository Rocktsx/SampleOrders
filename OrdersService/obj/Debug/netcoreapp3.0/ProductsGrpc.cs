// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/products.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace OrdersService {
  public static partial class Products
  {
    static readonly string __ServiceName = "Products.Products";

    static readonly grpc::Marshaller<global::OrdersService.FilterProductDto> __Marshaller_Products_FilterProductDto = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::OrdersService.FilterProductDto.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::OrdersService.ProductDto> __Marshaller_Products_ProductDto = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::OrdersService.ProductDto.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::OrdersService.ProductIdDto> __Marshaller_Products_ProductIdDto = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::OrdersService.ProductIdDto.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::OrdersService.AddedProductDto> __Marshaller_Products_AddedProductDto = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::OrdersService.AddedProductDto.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::OrdersService.UpdatedResultDto> __Marshaller_Products_UpdatedResultDto = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::OrdersService.UpdatedResultDto.Parser.ParseFrom);

    static readonly grpc::Method<global::OrdersService.FilterProductDto, global::OrdersService.ProductDto> __Method_GetProducts = new grpc::Method<global::OrdersService.FilterProductDto, global::OrdersService.ProductDto>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetProducts",
        __Marshaller_Products_FilterProductDto,
        __Marshaller_Products_ProductDto);

    static readonly grpc::Method<global::OrdersService.ProductIdDto, global::OrdersService.ProductDto> __Method_GetProduct = new grpc::Method<global::OrdersService.ProductIdDto, global::OrdersService.ProductDto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProduct",
        __Marshaller_Products_ProductIdDto,
        __Marshaller_Products_ProductDto);

    static readonly grpc::Method<global::OrdersService.AddedProductDto, global::OrdersService.ProductDto> __Method_Add = new grpc::Method<global::OrdersService.AddedProductDto, global::OrdersService.ProductDto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Add",
        __Marshaller_Products_AddedProductDto,
        __Marshaller_Products_ProductDto);

    static readonly grpc::Method<global::OrdersService.ProductDto, global::OrdersService.UpdatedResultDto> __Method_Update = new grpc::Method<global::OrdersService.ProductDto, global::OrdersService.UpdatedResultDto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_Products_ProductDto,
        __Marshaller_Products_UpdatedResultDto);

    static readonly grpc::Method<global::OrdersService.ProductIdDto, global::OrdersService.UpdatedResultDto> __Method_Delete = new grpc::Method<global::OrdersService.ProductIdDto, global::OrdersService.UpdatedResultDto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_Products_ProductIdDto,
        __Marshaller_Products_UpdatedResultDto);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::OrdersService.ProductsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Products</summary>
    [grpc::BindServiceMethod(typeof(Products), "BindService")]
    public abstract partial class ProductsBase
    {
      public virtual global::System.Threading.Tasks.Task GetProducts(global::OrdersService.FilterProductDto request, grpc::IServerStreamWriter<global::OrdersService.ProductDto> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::OrdersService.ProductDto> GetProduct(global::OrdersService.ProductIdDto request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::OrdersService.ProductDto> Add(global::OrdersService.AddedProductDto request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::OrdersService.UpdatedResultDto> Update(global::OrdersService.ProductDto request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::OrdersService.UpdatedResultDto> Delete(global::OrdersService.ProductIdDto request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(ProductsBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetProducts, serviceImpl.GetProducts)
          .AddMethod(__Method_GetProduct, serviceImpl.GetProduct)
          .AddMethod(__Method_Add, serviceImpl.Add)
          .AddMethod(__Method_Update, serviceImpl.Update)
          .AddMethod(__Method_Delete, serviceImpl.Delete).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ProductsBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetProducts, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::OrdersService.FilterProductDto, global::OrdersService.ProductDto>(serviceImpl.GetProducts));
      serviceBinder.AddMethod(__Method_GetProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::OrdersService.ProductIdDto, global::OrdersService.ProductDto>(serviceImpl.GetProduct));
      serviceBinder.AddMethod(__Method_Add, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::OrdersService.AddedProductDto, global::OrdersService.ProductDto>(serviceImpl.Add));
      serviceBinder.AddMethod(__Method_Update, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::OrdersService.ProductDto, global::OrdersService.UpdatedResultDto>(serviceImpl.Update));
      serviceBinder.AddMethod(__Method_Delete, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::OrdersService.ProductIdDto, global::OrdersService.UpdatedResultDto>(serviceImpl.Delete));
    }

  }
}
#endregion
