// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/orders.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace OrdersService {
  public static partial class Orders
  {
    static readonly string __ServiceName = "Orders.Orders";

    static readonly grpc::Marshaller<global::OrdersService.FilterOrderDto> __Marshaller_Orders_FilterOrderDto = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::OrdersService.FilterOrderDto.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::OrdersService.FilterOrderResultDto> __Marshaller_Orders_FilterOrderResultDto = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::OrdersService.FilterOrderResultDto.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::OrdersService.OrderIdDto> __Marshaller_Orders_OrderIdDto = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::OrdersService.OrderIdDto.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::OrdersService.OrderDto> __Marshaller_Orders_OrderDto = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::OrdersService.OrderDto.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::OrdersService.AddedOrderDto> __Marshaller_Orders_AddedOrderDto = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::OrdersService.AddedOrderDto.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::OrdersService.UpdatedOrderResultDto> __Marshaller_Orders_UpdatedOrderResultDto = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::OrdersService.UpdatedOrderResultDto.Parser.ParseFrom);

    static readonly grpc::Method<global::OrdersService.FilterOrderDto, global::OrdersService.FilterOrderResultDto> __Method_GetOrders = new grpc::Method<global::OrdersService.FilterOrderDto, global::OrdersService.FilterOrderResultDto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOrders",
        __Marshaller_Orders_FilterOrderDto,
        __Marshaller_Orders_FilterOrderResultDto);

    static readonly grpc::Method<global::OrdersService.OrderIdDto, global::OrdersService.OrderDto> __Method_GetOrder = new grpc::Method<global::OrdersService.OrderIdDto, global::OrdersService.OrderDto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOrder",
        __Marshaller_Orders_OrderIdDto,
        __Marshaller_Orders_OrderDto);

    static readonly grpc::Method<global::OrdersService.AddedOrderDto, global::OrdersService.OrderDto> __Method_Add = new grpc::Method<global::OrdersService.AddedOrderDto, global::OrdersService.OrderDto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Add",
        __Marshaller_Orders_AddedOrderDto,
        __Marshaller_Orders_OrderDto);

    static readonly grpc::Method<global::OrdersService.OrderDto, global::OrdersService.OrderDto> __Method_Update = new grpc::Method<global::OrdersService.OrderDto, global::OrdersService.OrderDto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_Orders_OrderDto,
        __Marshaller_Orders_OrderDto);

    static readonly grpc::Method<global::OrdersService.OrderIdDto, global::OrdersService.UpdatedOrderResultDto> __Method_Delete = new grpc::Method<global::OrdersService.OrderIdDto, global::OrdersService.UpdatedOrderResultDto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_Orders_OrderIdDto,
        __Marshaller_Orders_UpdatedOrderResultDto);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::OrdersService.OrdersReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Orders</summary>
    [grpc::BindServiceMethod(typeof(Orders), "BindService")]
    public abstract partial class OrdersBase
    {
      public virtual global::System.Threading.Tasks.Task<global::OrdersService.FilterOrderResultDto> GetOrders(global::OrdersService.FilterOrderDto request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::OrdersService.OrderDto> GetOrder(global::OrdersService.OrderIdDto request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::OrdersService.OrderDto> Add(global::OrdersService.AddedOrderDto request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::OrdersService.OrderDto> Update(global::OrdersService.OrderDto request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::OrdersService.UpdatedOrderResultDto> Delete(global::OrdersService.OrderIdDto request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(OrdersBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetOrders, serviceImpl.GetOrders)
          .AddMethod(__Method_GetOrder, serviceImpl.GetOrder)
          .AddMethod(__Method_Add, serviceImpl.Add)
          .AddMethod(__Method_Update, serviceImpl.Update)
          .AddMethod(__Method_Delete, serviceImpl.Delete).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, OrdersBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetOrders, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::OrdersService.FilterOrderDto, global::OrdersService.FilterOrderResultDto>(serviceImpl.GetOrders));
      serviceBinder.AddMethod(__Method_GetOrder, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::OrdersService.OrderIdDto, global::OrdersService.OrderDto>(serviceImpl.GetOrder));
      serviceBinder.AddMethod(__Method_Add, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::OrdersService.AddedOrderDto, global::OrdersService.OrderDto>(serviceImpl.Add));
      serviceBinder.AddMethod(__Method_Update, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::OrdersService.OrderDto, global::OrdersService.OrderDto>(serviceImpl.Update));
      serviceBinder.AddMethod(__Method_Delete, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::OrdersService.OrderIdDto, global::OrdersService.UpdatedOrderResultDto>(serviceImpl.Delete));
    }

  }
}
#endregion
