// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/products.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace OrdersService {
  public static partial class Products
  {
    static readonly string __ServiceName = "Products.Products";

    static readonly grpc::Marshaller<global::OrdersService.FilterProductDto> __Marshaller_Products_FilterProductDto = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::OrdersService.FilterProductDto.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::OrdersService.ProductDto> __Marshaller_Products_ProductDto = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::OrdersService.ProductDto.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::OrdersService.ProductIdDto> __Marshaller_Products_ProductIdDto = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::OrdersService.ProductIdDto.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::OrdersService.AddedProductDto> __Marshaller_Products_AddedProductDto = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::OrdersService.AddedProductDto.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::OrdersService.UpdatedResultDto> __Marshaller_Products_UpdatedResultDto = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::OrdersService.UpdatedResultDto.Parser.ParseFrom);

    static readonly grpc::Method<global::OrdersService.FilterProductDto, global::OrdersService.ProductDto> __Method_GetProducts = new grpc::Method<global::OrdersService.FilterProductDto, global::OrdersService.ProductDto>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetProducts",
        __Marshaller_Products_FilterProductDto,
        __Marshaller_Products_ProductDto);

    static readonly grpc::Method<global::OrdersService.ProductIdDto, global::OrdersService.ProductDto> __Method_GetProduct = new grpc::Method<global::OrdersService.ProductIdDto, global::OrdersService.ProductDto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProduct",
        __Marshaller_Products_ProductIdDto,
        __Marshaller_Products_ProductDto);

    static readonly grpc::Method<global::OrdersService.AddedProductDto, global::OrdersService.ProductDto> __Method_Add = new grpc::Method<global::OrdersService.AddedProductDto, global::OrdersService.ProductDto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Add",
        __Marshaller_Products_AddedProductDto,
        __Marshaller_Products_ProductDto);

    static readonly grpc::Method<global::OrdersService.ProductDto, global::OrdersService.UpdatedResultDto> __Method_Update = new grpc::Method<global::OrdersService.ProductDto, global::OrdersService.UpdatedResultDto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_Products_ProductDto,
        __Marshaller_Products_UpdatedResultDto);

    static readonly grpc::Method<global::OrdersService.ProductIdDto, global::OrdersService.UpdatedResultDto> __Method_Delete = new grpc::Method<global::OrdersService.ProductIdDto, global::OrdersService.UpdatedResultDto>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_Products_ProductIdDto,
        __Marshaller_Products_UpdatedResultDto);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::OrdersService.ProductsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Products</summary>
    public partial class ProductsClient : grpc::ClientBase<ProductsClient>
    {
      /// <summary>Creates a new client for Products</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public ProductsClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Products that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public ProductsClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected ProductsClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected ProductsClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual grpc::AsyncServerStreamingCall<global::OrdersService.ProductDto> GetProducts(global::OrdersService.FilterProductDto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProducts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncServerStreamingCall<global::OrdersService.ProductDto> GetProducts(global::OrdersService.FilterProductDto request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetProducts, null, options, request);
      }
      public virtual global::OrdersService.ProductDto GetProduct(global::OrdersService.ProductIdDto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProduct(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::OrdersService.ProductDto GetProduct(global::OrdersService.ProductIdDto request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetProduct, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::OrdersService.ProductDto> GetProductAsync(global::OrdersService.ProductIdDto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProductAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::OrdersService.ProductDto> GetProductAsync(global::OrdersService.ProductIdDto request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetProduct, null, options, request);
      }
      public virtual global::OrdersService.ProductDto Add(global::OrdersService.AddedProductDto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Add(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::OrdersService.ProductDto Add(global::OrdersService.AddedProductDto request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Add, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::OrdersService.ProductDto> AddAsync(global::OrdersService.AddedProductDto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::OrdersService.ProductDto> AddAsync(global::OrdersService.AddedProductDto request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Add, null, options, request);
      }
      public virtual global::OrdersService.UpdatedResultDto Update(global::OrdersService.ProductDto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Update(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::OrdersService.UpdatedResultDto Update(global::OrdersService.ProductDto request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Update, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::OrdersService.UpdatedResultDto> UpdateAsync(global::OrdersService.ProductDto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::OrdersService.UpdatedResultDto> UpdateAsync(global::OrdersService.ProductDto request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Update, null, options, request);
      }
      public virtual global::OrdersService.UpdatedResultDto Delete(global::OrdersService.ProductIdDto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Delete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::OrdersService.UpdatedResultDto Delete(global::OrdersService.ProductIdDto request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Delete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::OrdersService.UpdatedResultDto> DeleteAsync(global::OrdersService.ProductIdDto request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::OrdersService.UpdatedResultDto> DeleteAsync(global::OrdersService.ProductIdDto request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Delete, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override ProductsClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ProductsClient(configuration);
      }
    }

  }
}
#endregion
