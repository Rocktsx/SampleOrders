
@using BlazorApp.Data
@using BlazorApp.Services.Abstract
@inject IProductService ProductsService

<div class="modal fade show" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-scrollable" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Products</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="OnClose">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @if (products == null)
                {
                    <p><em>Loading...</em></p>
                }
                else
                {
                    <table class="table">
                        <thead>
                            <tr>
                                <th></th>
                                <th>Name</th>
                                <th>Unit Price</th>
                                <th>Description</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var product in products)
                            {
                                <tr>
                                    <td>
                                        <button class="btn btn-primary" @onclick="@(e => OnAddClick(product))">+</button>
                                    </td>
                                    <td>@product.ProductName</td>
                                    <td>@product.UnitPrice.ToString("F2")</td>
                                    <td>@product.Description</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="OnClose">Ok</button>
            </div>
        </div>
    </div>
</div>



@code {
    private IEnumerable<Product> products;

    [Parameter]
    public Func<Product, Task> AddProduct { get; set; }

    [Parameter]
    public EventCallback<MouseEventArgs> OnClose { get; set; }

    protected override async Task OnInitializedAsync()
    {
        products = await ProductsService.GetProductsAsync("");

    }
    private void OnAddClick(Product product)
    {
        if (AddProduct != null)
        {
            AddProduct(product);
        }
    }
}
